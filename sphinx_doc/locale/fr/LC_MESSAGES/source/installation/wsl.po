# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Niryo All rights reserved. No part of this document
# may be reproduced or transmitted in any form or by any means without prior
# written consent of Niryo SAS
# This file is distributed under the same license as the Ned ROS
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ned ROS Documentation v3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-22 17:37+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/installation/wsl.rst:2
msgid "Windows Subsystem for Linux installation (experimental)"
msgstr ""

#: ../../source/installation/wsl.rst:5
msgid ""
"You have to be running Windows 10 version 2004 (Build 19041) or higher "
"for WSL2 to work."
msgstr ""

#: ../../source/installation/wsl.rst:8
msgid ""
"The installation under WSL is not originally supported by Niryo, this "
"guide is provided on an indicative basis only."
msgstr ""

#: ../../source/installation/wsl.rst:10
msgid ""
"The following guide is mainly adapted from this blog post from Jack "
"Kawell, feel free to refer to it for more complete information [1]_"
msgstr ""

#: ../../source/installation/wsl.rst:12
msgid ""
"Microsoft is developping since 2016 a compatibility layer for running "
"Linux binary executables natively on Windows 10. With the version 2 "
"issued in 2019, this \"hidden Linux kernel\" is now mature enough to run "
"complex operations like the full ROS stack [2]_."
msgstr ""

#: ../../source/installation/wsl.rst:17
msgid "Install WSL2 [3]_"
msgstr ""

#: ../../source/installation/wsl.rst:19
msgid ""
"1. Enable Windows Subsystem for Linux on your machine (in a powershell "
"terminal) ::"
msgstr ""

#: ../../source/installation/wsl.rst:23
msgid "2. Update WSL to use version 2 (in a powershell terminal) ::"
msgstr ""

#: ../../source/installation/wsl.rst:27
msgid ""
"You then need to restart your machine to finish the WSL install and the "
"upgrade to WSL2."
msgstr ""

#: ../../source/installation/wsl.rst:29
msgid "Set default version of WSL to 2 (in a powershell terminal)"
msgstr ""

#: ../../source/installation/wsl.rst:35
msgid "Install an Ubuntu 18.04 distribution using the Windows Store"
msgstr ""

#: ../../source/installation/wsl.rst:43
msgid "Ubuntu 18.04 in the Windows Store"
msgstr ""

#: ../../source/installation/wsl.rst:45
msgid ""
"6. Launch the app. The first time, it asks you to finish the "
"initialization of the OS Your Ubuntu OS is now ready. You can continue "
"the build of the stack using the tutorial"
msgstr ""

#: ../../source/installation/wsl.rst:50
msgid "Setting up GUI forwarding"
msgstr ""

#: ../../source/installation/wsl.rst:52
msgid ""
"WSL does not come with an X server. Thus, you will not be able to launch "
"any graphical windows for now. But we can change this by using a Windows "
"X server and forward the GUI to it using GUI forwarding"
msgstr ""

#: ../../source/installation/wsl.rst:55
msgid ""
"Many X servers exist for Windows 10. We tested VcXsrc, and it correctly "
"does the job. https://sourceforge.net/projects/vcxsrv/"
msgstr ""

#: ../../source/installation/wsl.rst:58
msgid ""
"1. Launch VcXsrv. Be sure to have the following options : - Uncheck "
"\"Native OpenGL\" - Check \"Disable access control\""
msgstr ""

#: ../../source/installation/wsl.rst:75
msgid ""
"You need to export the address of your Xserver in Ubuntu 18 to forward "
"the GUI"
msgstr ""

#: ../../source/installation/wsl.rst:81
msgid "You can add this to your bashrc file"
msgstr ""

#: ../../source/installation/wsl.rst:83
msgid ""
"You can check that your forwarding works by using simple X11 apps for "
"example :"
msgstr ""

#: ../../source/installation/wsl.rst:91
msgid "Install ROS melodic (see instructions here)"
msgstr ""

#: ../../source/installation/wsl.rst:93
msgid "Try launching rviz"
msgstr ""

#: ../../source/installation/wsl.rst:99
msgid ""
"You should now be able to launch any simulation of the One, Ned or Ned2 "
"using rviz or gazebo"
msgstr ""

#: ../../source/installation/wsl.rst:102
msgid "Troubleshooting"
msgstr ""

#: ../../source/installation/wsl.rst:104
msgid ""
"**Error: Can't open display: 192.168.1.44:0.0** Your DISPLAY variable "
"does not match the address of your XServer. Try : - Check that you "
"correctly launched your XServer with the required options (Disable access"
" control is essential) - Check that the ip you gave is correct (you need "
"the address in /etc/resolv.conf to have it work)"
msgstr ""

#: ../../source/installation/wsl.rst:110
msgid ""
"**OpenGL issues** Some people have said that they run into issues with "
"OpenGL applications like Rviz. If you do, try setting the environment "
"variable LIBGL_ALWAYS_INDIRECT=0 in your WSL2 terminal (you can just add "
"export LIBGL_ALWAYS_INDIRECT=0 to the end of your .bashrc file)."
msgstr ""

#: ../../source/installation/wsl.rst:116
msgid "`<https://jack-kawell.com/2020/06/12/ros-wsl2/>`_"
msgstr ""

#: ../../source/installation/wsl.rst:118
msgid "`<https://docs.microsoft.com/en-us/windows/wsl/compare-versions>`_"
msgstr ""

#: ../../source/installation/wsl.rst:120
msgid "`<https://docs.microsoft.com/en-us/windows/wsl/install-win10>`_"
msgstr ""

