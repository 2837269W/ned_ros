# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Niryo All rights reserved. No part of this document
# may be reproduced or transmitted in any form or by any means without prior
# written consent of Niryo SAS
# This file is distributed under the same license as the Ned ROS
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ned ROS Documentation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-23 16:51+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/python_ros_wrapper/examples_tool_action.rst:2
msgid "Examples: Tool Action"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:4
msgid "This page shows how to control Ned's tools via the Python ROS Wrapper"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:6
msgid "If you want see more, you can look at :ref:`API - Tools<Tools>`"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:9
msgid ""
"If you are using the real robot, make sure the environment around it is "
"clear"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:12
msgid "Tool control"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:15
msgid "Equip Tool"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:17
msgid ""
"In order to use a tool, it should be plugged mechanically to the robot "
"but also connected software wise."
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:20
msgid ""
"To do that, we should use the function "
":meth:`~.niryo_robot_python_ros_wrapper.ros_wrapper.NiryoRosWrapper.update_tool`"
" which take no argument. It will scan motor connections and set the new "
"tool !"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:24
msgid "The line to equip a new tool is ::"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:31
msgid "Grasping"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:33
msgid ""
"To grasp with any tool, you can use the function "
":meth:`~.niryo_robot_python_ros_wrapper.ros_wrapper.NiryoRosWrapper.grasp_with_tool`."
" This action correspond to :"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:36
msgid "Close gripper for Grippers"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:37
msgid "Pull Air for Vacuum pump"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:38
msgid "Activate for Electromagnet"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:40
msgid "The code to grasp is ::"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:62
msgid "To grasp by specifying parameters ::"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:92
msgid "Releasing"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:94
msgid ""
"To release with any tool, you can use the function "
":meth:`~.niryo_robot_python_ros_wrapper.ros_wrapper.NiryoRosWrapper.release_with_tool`."
" This action correspond to:"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:97
msgid "Open gripper for Grippers"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:98
msgid "Push Air for Vacuum pump"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:99
msgid "Deactivate for Electromagnet"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:101
msgid "The line to release is ::"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:105
msgid "To release by specifying parameters ::"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:136
msgid "Pick & Place with tools"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:138
msgid ""
"There is a plenty of ways to realise a pick and place with the ROS "
"Wrapper. Methods will be presented from the lowest to highest level"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:141
msgid "Code used will be ::"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:163
msgid "First Solution : the heaviest"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:164
msgid "Everything is done by hand ::"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:198
msgid "Second Solution : Pick from pose & Place from pose functions"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:199
msgid "We use predefined functions ::"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:208
msgid "Third Solution : All in one"
msgstr ""

#: ../../source/python_ros_wrapper/examples_tool_action.rst:209
msgid "We use THE predifined function ::"
msgstr ""

