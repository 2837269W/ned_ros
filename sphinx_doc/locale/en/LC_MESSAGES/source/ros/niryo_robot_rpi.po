# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Niryo All rights reserved. No part of this document
# may be reproduced or transmitted in any form or by any means without prior
# written consent of Niryo SAS
# This file is distributed under the same license as the Ned ROS
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ned ROS Documentation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-10 11:46+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/ros/niryo_robot_rpi.rst:2
msgid "Niryo robot RPI package"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:4
msgid ""
"This package deals with Raspberry Pi related stuff (Button, fans, I/O, "
"leds, ...)."
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:8
msgid "Raspberry Pi Node"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:9
msgid ""
"The ROS Node manages the following components: - Physical top button: "
"executes actions when the button is pressed. - Digital I/O panel: gets "
"commands and sends the current state of digital I/Os. Also controls tools"
" like the Electromagnet. - Robot fans. - Led: sets the LED color. - ROS "
"log: can remove all previous logs on startup to prevent a lack of disk "
"space in the long run (SD cards do not have infinite storage)."
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:16
msgid "The namespace used is: |namespace_emphasize|"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:18
msgid ""
"**Note that this package should not be used when you are using Ned ROS "
"stack on your computer in simulation mode. Executes actions when the "
"button is pressed.**"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:21
msgid "Publisher - Raspberry Pi"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:23
msgid "RPI Package's Publishers"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:29
#: ../../source/ros/niryo_robot_rpi.rst:60
msgid "Name"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:30
#: ../../source/ros/niryo_robot_rpi.rst:61
msgid "Message Type"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:31
#: ../../source/ros/niryo_robot_rpi.rst:62
msgid "Description"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:32
msgid "``pause_state``"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:33
msgid ":ref:`PausePlanExecution<PausePlanExecution (Message)>`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:34
msgid "Publish the current execution state launched when button is pressed"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:35
msgid "``/niryo_robot/blockly/save_current_point``"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:36
msgid ":std_msgs:`std_msgs/Int32<Int32>`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:37
msgid ""
"Publish current point when user is in Blockly page to save block by "
"pressing button"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:38
msgid "``/niryo_robot/rpi/is_button_pressed``"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:39
msgid ":std_msgs:`std_msgs/Bool<Bool>`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:40
msgid "Publish the button state (true if pressed)"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:41
msgid "``digital_io_state``"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:42
msgid ":ref:`DigitalIOState<DigitalIOState (Service)>`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:43
msgid "Publish the I/Os state by giving for each it's pin / name / mode / state"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:44
msgid "``/niryo_robot/rpi/led_state``"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:45
msgid ":std_msgs:`std_msgs/Int8<Int8>`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:46
msgid "Publish the current led color"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:47
msgid "``ros_log_status``"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:48
msgid ":ref:`LogStatus<LogStatus (Service)>`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:49
msgid ""
"Publish the current log status (log size / available disk / boolean if "
"should delete ros log on startup)"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:52
msgid "Services - Raspberry Pi"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:54
msgid "RPI Services"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:63
msgid "``shutdown_rpi``"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:64
#: ../../source/ros/niryo_robot_rpi.rst:67
#: ../../source/ros/niryo_robot_rpi.rst:85
#: ../../source/ros/niryo_robot_rpi.rst:88
msgid ":ref:`SetInt<SetInt>`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:65
msgid "Shutdown the Raspberry Pi"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:66
msgid "``/niryo_robot/rpi/change_button_mode``"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:68
msgid "Change top button mode (autorun program, blockly, nothing, ...)"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:69
msgid "``get_digital_io``"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:70
msgid ":ref:`GetDigitalIO<GetDigitalIO (Service)>`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:71
msgid "Get digital IO state list"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:72
msgid "``set_digital_io_mode``"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:73
#: ../../source/ros/niryo_robot_rpi.rst:76
msgid ":ref:`SetDigitalIO<SetDigitalIO (Service)>`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:74
msgid "Set a digital IO to the mode given"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:75
msgid "``set_digital_io_state``"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:77
msgid "Set a digital IO to the state given"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:78
msgid "``set_led_state``"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:79
msgid ":ref:`std_msgs/SetInt<SetInt>`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:80
msgid "Set led state"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:81
msgid "``set_led_custom_blinker``"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:82
msgid ":ref:`LedBlinker<LedBlinker (Service)>`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:83
msgid "Set the led in blink mode with the color given"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:84
msgid "``purge_ros_logs``"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:86
msgid "Purge ROS log"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:87
msgid "``set_purge_ros_log_on_startup``"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:89
msgid ""
"Modify the permanent settings that tells if robot should purge it's ROS "
"log at each boot"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:92
msgid "Dependencies - Raspberry Pi"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:94
msgid ":msgs_index:`std_msgs`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:95
msgid ":msgs_index:`actionlib_msgs`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:96
msgid ":msgs_index:`sensor_msgs`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:97
msgid ":ref:`niryo_robot_msgs <Niryo Robot Messages Package>`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:98
msgid ":ref:`niryo_robot_arm_commander <Niryo Robot Commander Package>`"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:101
msgid "Services & Messages files - Raspberry Pi"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:104
msgid "ChangeMotorConfig (Service)"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:111
msgid "GetDigitalIO (Service)"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:117
msgid "LedBlinker (Service)"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:123
msgid "SetDigitalIO (Service)"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:129
msgid "DigitalIOState (Service)"
msgstr ""

#: ../../source/ros/niryo_robot_rpi.rst:135
msgid "LogStatus (Service)"
msgstr ""

#~ msgid "Niryo Robot RPI Package"
#~ msgstr ""

#~ msgid ""
#~ "This package deals with raspberry pi "
#~ "related stuff (Button, fans, I/O, leds,"
#~ " ...)"
#~ msgstr ""

#~ msgid "RPI Node"
#~ msgstr ""

#~ msgid ""
#~ "The ROS Node manages the following "
#~ "components: - Physical top button: "
#~ "executes actions when the button is "
#~ "pressed. - Digital I/O panel : "
#~ "gets commands and sends the current "
#~ "state of digital I/Os. Also controls "
#~ "tools like the electromagnet. - Robot"
#~ " fans - Led : sets the LED "
#~ "color. - ROS log : can remove "
#~ "all previous logs on startup to "
#~ "prevent a lack of disk space in"
#~ " the long run (SD cards do not"
#~ " have infinite storage)."
#~ msgstr ""

#~ msgid "The namespace used is : |namespace_emphasize|"
#~ msgstr ""

#~ msgid "Publisher - RPI"
#~ msgstr ""

#~ msgid "Services - RPI"
#~ msgstr ""

#~ msgid "Dependencies - RPI"
#~ msgstr ""

#~ msgid "Services & Messages files - RPI"
#~ msgstr ""

#~ msgid ""
#~ "**Note that this package should not "
#~ "be used when you are using Ned "
#~ "ROS stack on your computer, in "
#~ "simulation mode.**executes actions when the"
#~ " button is pressed.**"
#~ msgstr ""

#~ msgid ""
#~ "Publish current point when user is "
#~ "in blockly page to save block by"
#~ " pressing button"
#~ msgstr ""

#~ msgid "Shutdown the raspberry pi"
#~ msgstr ""

#~ msgid "Purge ros log"
#~ msgstr ""

#~ msgid ""
#~ "Modify the permanent settings that tells"
#~ " if robot should purge it's ros "
#~ "log at each boot"
#~ msgstr ""

